#!/usr/bin/env python

import sys
from rootpy.extern.argparse import ArgumentParser

parser = ArgumentParser()
parser.add_argument('--plot', action='store_true', default=False)
args = parser.parse_args()

from mva.norm.cache import SCALES
from mva import log

z_norms = {}
qcd_norms = {}
for year in SCALES.keys():
    for category in sorted(SCALES[year].keys()):
        for embedding in SCALES[year][category].keys():
            params = sorted(SCALES[year][category][embedding].keys())
            for param in params:
                qcd_scale, qcd_scale_error, \
                ztautau_scale, ztautau_scale_error = \
                SCALES[year][category][embedding][param]
                if param not in z_norms:
                    z_norms[param] = []
                    qcd_norms[param] = []
                z_norms[param].append((ztautau_scale, ztautau_scale_error))
                qcd_norms[param].append((qcd_scale, qcd_scale_error))

if args.plot:
    from matplotlib import pyplot as plt

    plt.figure()
    fig, axs = plt.subplots(nrows=2, ncols=1, sharex=True)

    for param in params:
        z_n, z_e = zip(*z_norms[param])
        q_n, q_e = zip(*qcd_norms[param])
        x = range(len(z_n))

        ax = axs[0]
        ax.errorbar(x, z_n, z_e, fmt='o',
                markersize=5, label='%s Fit' % param)
        ax = axs[1]
        ax.errorbar(x, q_n, q_e, fmt='o',
                markersize=5, label='%s Fit' % param)

    axs[0].set_ylim(.5, 2)
    axs[0].set_ylabel('Z Scale Factor')

    axs[1].set_ylim(.5, 2.5)
    axs[1].set_xticklabels([''] + categories)
    axs[1].set_xlim(-0.5, len(z_norms[params[0]]) - .5)
    axs[1].set_ylabel('QCD Scale Factor')

    l1 = axs[0].legend(numpoints=1)
    l2 = axs[1].legend(numpoints=1)

    l1.get_frame().set_fill(False)
    l1.get_frame().set_linewidth(0)

    l2.get_frame().set_fill(False)
    l2.get_frame().set_linewidth(0)

    out_name = 'bkg_norms'
    if args.embedding:
        out_name += '_embedding'

    for f in ('png', 'eps'):
        plt.savefig('%s.%s' % (out_name, f))

