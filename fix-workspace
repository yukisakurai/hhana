#!/usr/bin/env python

from rootpy.extern.argparse import ArgumentParser

parser = ArgumentParser()
parser.add_argument('--jobs', type=int, default=-1)
parser.add_argument('--quiet', default=False, action='store_true')
parser.add_argument('--suffix', default='fixed')
parser.add_argument('--prune-norms', action='store_true', default=False)
parser.add_argument('--prune-shapes', action='store_true', default=False)
parser.add_argument('--chi2-threshold', type=float, default=0.99)
parser.add_argument('--symmetrize', action='store_true', default=False)
parser.add_argument('--symmetrize-partial', action='store_true', default=False)
parser.add_argument('--prune-samples', action='store_true', default=False)
parser.add_argument('--drop-others-shapes', action='store_true', default=False)
parser.add_argument('--remove-window', default=None)
parser.add_argument('paths', nargs='+')
args = parser.parse_args()

args.symmetrize = args.symmetrize or args.symmetrize_partial
if args.remove_window is not None:
    args.remove_window = map(float, args.remove_window.split(','))

from statstools.fixups import fix

fix(args.paths, n_jobs=args.jobs,
    suffix=args.suffix, verbose=not args.quiet,
    prune_norms=args.prune_norms,
    prune_shapes=args.prune_shapes,
    chi2_threshold=args.chi2_threshold,
    symmetrize=args.symmetrize,
    symmetrize_partial=args.symmetrize_partial,
    prune_samples=args.prune_samples,
    drop_others_shapes=args.drop_others_shapes,
    remove_window=args.remove_window)
