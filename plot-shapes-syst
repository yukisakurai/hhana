#!/usr/bin/env python

# python imports
import os

# rootpy imports
from rootpy.extern.argparse import ArgumentParser
from rootpy.plotting import Hist, Graph, Legend
from rootpy.utils.path import mkdir_p

# ROOT imports
from ROOT import TLatex

# local imports
from mva.cmd import get_parser
from mva import norm_cache 
from mva.defaults import TARGET_REGION
from mva.categories import CATEGORIES, Category_Preselection
from mva.variables import VARIABLES
from mva.analysis import Analysis, get_analysis
from mva.systematics import iter_systematics, get_systematics
from mva.samples import CompositeSample
from mva.templates import RatioPlot
from mva import save_canvas
from mva import log; log=log[__name__]
from mva.plotting import draw_ratio

args = get_parser(actions=False).parse_args()
categories = CATEGORIES[args.categories]
SYSTEMATICS = get_systematics(args.year)
analysis = get_analysis(args)
analysis.normalize(Category_Preselection)
output_suffix = analysis.get_suffix()

# list of fields to plot
fields=[
    'mmc1_mass',
    'dR_tau1_tau2',
    'dEta_jets',
    ]

field_dict = dict([(field, VARIABLES[field]) for field in fields])

backgrounds = analysis.backgrounds
signals = analysis.signals
ztautau = analysis.ztautau
others = analysis.others
qcd = analysis.qcd
TotalBkg = CompositeSample(backgrounds, name='TotalBkg', label='Total Background')
TotalSig = CompositeSample(signals, name='TotalSig', label='H#rightarrow#tau#tau')

samples = [
    ztautau, qcd, 
    TotalBkg, TotalSig
    ] 

log.info(backgrounds)
for s in samples:
    for category in categories:
        log.info(category)
        events = s.events(category, TARGET_REGION)
        log.info("The total number of events in %s is %d"% (s.name,events[1].value))
        field_hist, field_scale = ztautau.get_field_hist(field_dict, category)
        log.info(str(field_hist))
        log.info(str(field_scale))
        s.draw_array(field_hist,
                     category,
                     TARGET_REGION,
                     field_scale=field_scale,
                     systematics=args.systematics)
        log.info(str(field_hist))
        for field, hist in field_hist.items():
            for syst,hist_syst in hist.systematics.items():
                hist.title='NOMINAL'
                hist_syst.title=syst[0]
                log.info(syst)
                plot = draw_ratio(hist,hist_syst,field,category,
                                 textsize=18,
                                 ratio_range=(0.8, 1.2),
                                 ratio_line_values=[0.9, 1, 1.1],
                                 optional_label_text=s.label)
                save_canvas(plot, 'plots/systematics_shapes',
                            '{0}/shape_{1}_{2}_{3}_{4}.eps'.format(
                                s.name, syst[0], field, category.name, args.year % 1000))
