#!/usr/bin/env python
"""
Compare the signal sample with and without
the Multiple Perturbative Parton-Parton Interaction (MPI)
http://skands.web.cern.ch/skands/slides/oregon-skands.pdf
"""
# python imports
from tabulate import tabulate
from argparse import ArgumentParser
import os
import logging
# ROOT/rootpy imports
from rootpy.tree import Cut
from rootpy.plotting import Hist
from root_numpy import fill_hist
# local imports
from higgstautau.datasets import Database
#from mva.analysis import Analysis
from mva.analysis import Analysis
from mva.samples import Higgs
from mva.categories import CATEGORIES
from mva.defaults import TARGET_REGION
from mva.plotting import draw_ratio
from mva.variables import VARIABLES
from mva import CACHE_DIR, MMC_MASS

log = logging.getLogger(os.path.basename(__file__))

parser = ArgumentParser()
parser.add_argument('--no-truth-cuts', action='store_true', default=False)
parser.add_argument('--mode', default='gg', choices=('gg', 'VBF'))
parser.add_argument('--categories', default='mva', choices=('mva', 'cuts'))
args = parser.parse_args()

analysis = Analysis(2012)

DB = Database('datasets_ue_studies')
mode = args.mode
cattype = args.categories

# begin configuration
modes = [
    mode,
]

fields = [
    MMC_MASS,
    'tau1_BDTJetScore'
]
vars = {}
for field in fields:
    vars[field] = VARIABLES[field]

pileup_weight = True

# --------  SAMPLES
higgs_nompi_truth = Higgs(
    2012, mass=125, modes=modes,
    db=DB, ggf_weight=False,
    student='hhskim_truth',
    ntuple_path='/cluster/data12/qbuat/ntuples_hh/hhskim_ue/prod_v41/',
    suffix='_noMPI.mc12b',
    force_reopen=True)
higgs_nompi = Higgs(
    2012, mass=125, modes=modes,
    db=DB,
    ggf_weight=False,
    pileup_weight=pileup_weight,
    ntuple_path='/cluster/data12/qbuat/ntuples_hh/hhskim_ue/prod_v40/',
    suffix='_noMPI.mc12b',
    force_reopen=True)

# HACK HACK HACK
# This is an inclusive sample
# but since there is no reco cuts 
# it can be considered as a hadhad sample
# for the purpose of truth level studies
higgs_herwigps_truth = Higgs(
    2012, mass=125, modes=modes,
    db=DB, ggf_weight=False,
    inclusive_decays=False,
    student='hhskim_truth',
    sample_pattern='PowJim_AUET2CT10_'+mode+'H{0:d}_tautauInc',
    ntuple_path='/cluster/data12/qbuat/ntuples_hh/hhskim_ue/prod_v41/',
    suffix='mc12a' if mode=='gg' else 'mc12b')
higgs_herwigps = Higgs(
    2012, mass=125, modes=modes,
    db=DB,
    ggf_weight=False,
    pileup_weight=pileup_weight,
    inclusive_decays=True,
    sample_pattern='PowJim_AUET2CT10_'+mode+'H{0:d}_tautauInc',
    ntuple_path='/cluster/data12/qbuat/ntuples_hh/hhskim_ue/prod_v40/',
    suffix='mc12a' if mode=='gg' else 'mc12b',
    force_reopen=True)

higgs_truth = Higgs(
    2012, mass=125, modes=modes,
    db=DB, ggf_weight=False,
    ntuple_path='/cluster/data12/qbuat/ntuples_hh/hhskim_ue/prod_v41/',
    student='hhskim_truth')
higgs = Higgs(
    2012, mass=125, modes=modes, db=DB,
    ggf_weight=False,
    ntuple_path='/cluster/data12/qbuat/ntuples_hh/hhskim_ue/prod_v40/',
    pileup_weight=pileup_weight)


yields = {}
for category in CATEGORIES[cattype]:
    if hasattr(category, 'cuts_truth'):
        cuts = category.cuts_truth
    else: 
        raise RuntimeError('Category {0} has no attribute cuts_truth'.format(category.name))
    if args.no_truth_cuts:
        cuts = None
    log.info((category.name, category.cuts))
    log.info((category.name, cuts))
    log.info('evaluate truth level yields')
    yield_truth_default = higgs_truth.events_root(weighted=True, cuts=cuts)[1].value
    yield_truth_herwig = higgs_herwigps_truth.events_root(weighted=True, cuts=cuts)[1].value
    yield_truth_nompi = higgs_nompi_truth.events_root(weighted=True, cuts=cuts)[1].value
    yields[category.name+'_truth'] = {'default': yield_truth_default, 'herwig':yield_truth_herwig, 'nompi':yield_truth_nompi}

    field_hist_template, field_scale = higgs.get_field_hist(vars, category)
    field_hist_default = higgs.get_hist_array(
        field_hist_template, category, TARGET_REGION, field_scale=field_scale)
    field_hist_herwig = higgs_herwigps.get_hist_array(
        field_hist_template, category, TARGET_REGION, field_scale=field_scale)
    # field_hist_truth_default = higgs_truth.g

    for field, var in vars.items():
        field_hist_default[field].title = 'default'
        field_hist_herwig[field].title = 'herwig ps'
        plot = draw_ratio(
            field_hist_default[field], field_hist_herwig[field],
            field, category, normalize=True)
        for fmt in ('eps', 'png'):
            plot.SaveAs('herwig_compare_mode_{0}_cat_{1}_{2}.{3}'.format(mode, category.name, field, fmt))

        if cattype == 'mva':
            # get the BDTs
            clf = analysis.get_clf(category, mass=125, load=True, transform=True)
            # get scores
            scores, weights = higgs.scores(
                clf, category, TARGET_REGION,
                systematics=False)['NOMINAL']
            scores_herwig, weights_herwig = higgs_herwigps.scores(
                clf, category, TARGET_REGION,
                systematics=False)['NOMINAL']
            # get scores range
            min_score = min(scores.min(), scores_herwig.min())
            max_score = max(scores.max(), scores_herwig.max())
            # histograms
            hist = Hist(20, min_score - 1E-5, max_score + 1E-5, title='default')
            hist_herwig = Hist(20, min_score - 1E-5, max_score + 1E-5, title='herwig ps')
            # fill histograms with scores
            fill_hist(hist, scores, weights)
            fill_hist(hist_herwig, scores_herwig, weights_herwig)
            # plot the scores
            plot = draw_ratio(hist, hist_herwig, 'BDT Score', category, normalize=True)
            for fmt in ('eps', 'png'):
                plot.SaveAs('herwig_compare_mode_{0}_cat_{1}_{2}.{3}'.format(mode, category.name, 'bdt', fmt))



    yield_nompi = higgs_nompi.events_root(category, TARGET_REGION, cuts=cuts)[1].value
    yield_default = higgs.events_root(category, TARGET_REGION, cuts=cuts)[1].value
    yield_herwig = higgs_herwigps.events_root(category, TARGET_REGION, cuts=cuts)[1].value
    yields[category.name] = {'default': yield_default, 'herwig':yield_herwig, 'nompi':yield_nompi}

log.info(yields)

table = []
headers = ["Category"]+[cat.name for cat in CATEGORIES[cattype]]
row_p = ["Pythia (%)"]
row_h = ["herwig (%)"]
row_ph = ["P/H"]
row_n = ["no-mpi"]
for cat in CATEGORIES[cattype]:
    p = yields[cat.name]['default'] / yields['{0}_truth'.format(cat.name)]['default'] * 100
    h = yields[cat.name]['herwig'] / yields['{0}_truth'.format(cat.name)]['herwig'] * 100
    row_p.append(p)
    row_h.append(h)
    row_ph.append(p/h)
    row_n.append(yields[cat.name]['nompi'] / yields['{0}_truth'.format(cat.name)]['nompi'] * 100)
table.append(row_p)
table.append(row_h)
table.append(row_ph)
table.append(row_n)

print tabulate(table, headers=headers)
print "Standard sample raw number of events", higgs.events(weighted=False)[1].value
print "No MPI sample raw number of events", higgs_nompi.events(weighted=False)[1].value
print "Herwig sample raw number of events", higgs_herwigps.events(weighted=False)[1].value
print "Stand. sample weighted number of events", higgs.events(weighted=True)[1].value
print "No MPI sample weighted number of events", higgs_nompi.events(weighted=True)[1].value
print "Herwig sample weighted number of events", higgs_herwigps.events(weighted=True)[1].value



